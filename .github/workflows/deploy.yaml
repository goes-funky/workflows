name: Deploy

on:
  workflow_call:
    inputs:
      skaffold:
        type: string
        description: "Skaffold Version"
        default: "1.33.0"
      environment:
        type: string
        description: "Environment to deploy to"
    secrets:
      GCP_PROJECT_ID:
        description: "GCP Project ID"
        required: true
      GCP_SERVICE_ACCOUNT:
        description: "GCP Service Account Key"
        required: true
      GKE_CLUSTER:
        description: "GKE Cluster Name"
        required: true
      GKE_LOCATION:
        description: "GKE Cluster Location"
        required: true
      ssh-private-key:
        description: SSH private key used to authenticate to GitHub with, in order to fetch private dependencies
        required: false


jobs:
  build:
    name: Build Docker images
    runs-on: ubuntu-latest
    if: github.event.ref == 'refs/heads/master' || startsWith(github.event.ref, 'refs/heads/hotfix/') || startsWith(github.event.ref, 'refs/heads/deploy/') || startsWith(github.event.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v2

      - uses: google-github-actions/setup-gcloud@v0.2.1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT }}
          export_default_credentials: true

      - name: Configure Docker Auth
        run: |
          gcloud --quiet auth configure-docker eu.gcr.io

      - name: Setup SSH Agent
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: "${{ secrets.ssh-private-key }}"

      - uses: yokawasa/action-setup-kube-tools@v0.7.1
        with:
          setup-tools: "skaffold"
          skaffold: "${{ inputs.skaffold }}"

      - name: Build
        run: |
          skaffold build

      - name: Push
        run: |
          skaffold build --file-output=build.json

      - name: Archive build reference
        uses: actions/upload-artifact@v2
        with:
          name: build-ref
          path: build.json

  get-deploy-env:
    name: Get deployment environment
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.set-deploy-env.outputs.environment }}
    steps:
      - id: set-deploy-env
        name: Set the environment name from manual input or branch name
        run: |
          if [ -n "${{ inputs.environment }}" ]; then
            echo 'sourcing environment from manual input: ${{ inputs.environment }}'
            echo '::set-output name=environment::${{ inputs.environment }}'
            exit
          fi

          # Normalize the `master` branch into `deploy/development`
          normalized="${GITHUB_REF/master/deploy/development}"
          ref="${normalized#refs/}"

          # In this flow, we deploy to production on push to tags, and
          # `hotfix/*` branches.
          if [[ $ref == "tags/v*" || $ref == "heads/hotfix/*" ]]; then
            echo "sourcing environment from tag or hotfix branch name name: production"
            echo "::set-output name=environment::production"
            exit
          fi

          # Otherwise, it's either a deploy branch or master branch, which
          # we've normalized to a deploy branch.

          # Do the French Revolution - off with their heads.
          environment="${ref#heads/deploy/}"

          echo "sourcing environment from branch name: $environment"
          echo "::set-output name=environment::$environment"

  deploy:
    name: Deploy
    needs:
      - build
      - get-deploy-env
    runs-on: ubuntu-latest
    environment: ${{ needs.get-deploy-env.outputs.environment }}
    steps:
      - uses: actions/checkout@v2

      - uses: google-github-actions/setup-gcloud@v0.2.1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT }}
          export_default_credentials: true

      - uses: google-github-actions/get-gke-credentials@v0.3.0
        with:
          cluster_name: ${{ secrets.GKE_CLUSTER }}
          location: ${{ secrets.GKE_LOCATION }}

      - name: Download build reference
        uses: actions/download-artifact@v2
        with:
          name: build-ref

      - uses: yokawasa/action-setup-kube-tools@v0.7.1
        with:
          setup-tools: skaffold
          skaffold: "${{ inputs.skaffold }}"

      - name: Deploy
        run: |
          skaffold deploy --build-artifacts=build.json
