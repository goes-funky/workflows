name: Deploy
"on":
  workflow_call:
    inputs:
      environment:
        type: string
        description: Deployment environment
        required: false
      development-environment:
        type: string
        description: Development environment
        default: dev
        required: false
      production-environment:
        type: string
        description: Production environment
        default: prod
        required: false
      default-repo:
        type: string
        description: Default artifact repository
        default: eu.gcr.io/y42-artifacts-ea47981a
      dist-artifact:
        type: string
        description: Dist artifact name
        required: false
      skip-deploy:
        type: boolean
        description: Skip deployment to cluster
        required: false
      skip-checkout:
        type: boolean
        description: Whether to skip checkout
        default: false
      skaffold:
        type: string
        description: Skaffold version
        default: 1.39.2
      is-repo-public:
        type: boolean
        description: Whether to skip ssh agent configuration
        default: false
      development-branch:
        type: string
        description: Development branch
        default: ${{ github.event.repository.default_branch }}
        required: false
      skaffold-file:
        type: string
        description: Skaffold file to use
        default: skaffold.yaml
      kubeval:
        type: string
        description: Kubeval version
        default: 0.16.1
    secrets:
      gcp-project-id:
        description: GCP Project ID
        required: true
      gcp-service-account:
        description: GCP Service Account Key
        required: true
      gcp-gcr-project-id:
        description: GCP GCR Project ID
        required: true
      gke-cluster:
        description: GKE Cluster Name
        required: true
      ssh-private-key:
        description: SSH private key used to authenticate to GitHub with, in order to fetch private dependencies
        required: false
      gcp-gcr-service-account:
        description: GCP GCR Service Account Key
        required: true
      gke-location:
        description: GKE Cluster Location (ignored in lieu of fully-qualified cluster ID)
        required: false
env:
  SKAFFOLD_PUSH: $${ github.event.ref == format('refs/heads/{0}', inputs.development-branch) || startsWith(github.event.ref, 'refs/tags/v') }
jobs:
  deploy-development:
    needs:
      - build
    if: '!inputs.skip-deploy && (github.event.ref == format(''refs/heads/{0}'', inputs.development-branch) || startsWith(github.event.ref, ''refs/tags/v''))'
    environment: ${{ inputs.development-environment }}
    runs-on: ubuntu-latest
    name: Deploy to development
    steps:
      - name: Checkout
        if: '!inputs.skip-checkout'
        uses: actions/checkout@v3
      - name: Authenticate to Google Cloud
        id: auth_gcp
        uses: google-github-actions/auth@v0
        with:
          project_id: ${{ secrets.gcp-project-id }}
          credentials_json: ${{ secrets.gcp-service-account }}
      - uses: google-github-actions/get-gke-credentials@v0.8.0
        with:
          cluster_name: ${{ secrets.gke-cluster }}
      - name: Download build reference
        uses: actions/download-artifact@v3
        with:
          name: build-${{ inputs.skaffold-file }}
      - name: Setup Kubernetes tools
        uses: yokawasa/action-setup-kube-tools@v0.7.1
        with:
          setup-tools: skaffold
          skaffold: ${{ inputs.skaffold }}
      - name: Deploy
        env:
          SKAFFOLD_PROFILE: ${{ (inputs.environment == inputs.production-environment && github.event.ref != format('refs/heads/{0}', inputs.development-branch)) && 'prod' || 'nonprod' }}
        run: skaffold deploy --filename=${{ inputs.skaffold-file }} --force --build-artifacts=build.json
  deploy-production:
    needs:
      - build
      - deploy-development
    if: '!inputs.skip-deploy && startsWith(github.event.ref, ''refs/tags/v'')'
    environment: ${{ inputs.production-environment }}
    runs-on: ubuntu-latest
    name: Deploy to production
    steps:
      - name: Checkout
        if: '!inputs.skip-checkout'
        uses: actions/checkout@v3
      - name: Authenticate to Google Cloud
        id: auth_gcp
        uses: google-github-actions/auth@v0
        with:
          project_id: ${{ secrets.gcp-project-id }}
          credentials_json: ${{ secrets.gcp-service-account }}
      - uses: google-github-actions/get-gke-credentials@v0.8.0
        with:
          cluster_name: ${{ secrets.gke-cluster }}
      - name: Download build reference
        uses: actions/download-artifact@v3
        with:
          name: build-${{ inputs.skaffold-file }}
      - name: Setup Kubernetes tools
        uses: yokawasa/action-setup-kube-tools@v0.7.1
        with:
          setup-tools: skaffold
          skaffold: ${{ inputs.skaffold }}
      - name: Deploy
        run: skaffold deploy --filename=${{ inputs.skaffold-file }} --profile prod --force --build-artifacts=build.json
  build:
    runs-on: ubuntu-latest
    name: Build Docker images
    steps:
      - name: Checkout
        if: '!inputs.skip-checkout'
        uses: actions/checkout@v3
        with:
          path: ./code
      - name: Setup skaffold cache
        uses: actions/cache@v3
        with:
          path: ~/.skaffold/cache
          key: ${{ runner.os }}-skaffold
      - uses: actions/download-artifact@v3
        if: inputs.dist-artifact
        with:
          name: ${{ inputs.dist-artifact }}
          path: ./code/dist
      - name: Setup SSH Agent
        if: '!inputs.is-repo-public'
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.ssh-private-key }}
      - name: Authenticate to Google Cloud
        id: auth_gcp
        uses: google-github-actions/auth@v0
        with:
          project_id: ${{ secrets.gcp-gcr-project-id }}
          credentials_json: ${{ secrets.gcp-gcr-service-account }}
          token_format: access_token
      - name: Authenticate to Google Container Registry
        id: auth_gcr
        uses: docker/login-action@v2
        with:
          registry: eu.gcr.io
          username: oauth2accesstoken
          password: ${{ steps.auth_gcp.outputs.access_token }}
      - name: Authenticate to Google Artifact Registry
        id: auth_docker_pkg_dev
        uses: docker/login-action@v1
        with:
          registry: europe-west3-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth_gcp.outputs.access_token }}
      - name: Setup Kubernetes tools
        uses: yokawasa/action-setup-kube-tools@v0.7.1
        with:
          setup-tools: |-
            skaffold
            kubeval
          skaffold: ${{ inputs.skaffold }}
          kubeval: ${{ inputs.kubeval }}
      - name: Configure Skaffold
        run: skaffold config set default-repo "${{ inputs.default-repo }}"
      - name: Build
        run: cd ./code && skaffold build --filename=${{ inputs.skaffold-file }} --file-output=build.json
      - name: Archive build reference
        uses: actions/upload-artifact@v3
        with:
          name: build-${{ inputs.skaffold-file }}
          path: ./code/build.json
  deploy-environment:
    needs:
      - build
    if: inputs.environment
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    name: Deploy to environment
    steps:
      - name: Checkout
        if: '!inputs.skip-checkout'
        uses: actions/checkout@v3
      - name: Authenticate to Google Cloud
        id: auth_gcp
        uses: google-github-actions/auth@v0
        with:
          project_id: ${{ secrets.gcp-project-id }}
          credentials_json: ${{ secrets.gcp-service-account }}
      - uses: google-github-actions/get-gke-credentials@v0.8.0
        with:
          cluster_name: ${{ secrets.gke-cluster }}
      - name: Download build reference
        uses: actions/download-artifact@v3
        with:
          name: build-${{ inputs.skaffold-file }}
      - name: Setup Kubernetes tools
        uses: yokawasa/action-setup-kube-tools@v0.7.1
        with:
          setup-tools: skaffold
          skaffold: ${{ inputs.skaffold }}
      - name: Deploy
        env:
          SKAFFOLD_PROFILE: ${{ (inputs.environment == inputs.production-environment && github.event.ref != format('refs/heads/{0}', inputs.development-branch)) && 'prod' || 'nonprod' }}
        run: skaffold deploy --filename=${{ inputs.skaffold-file }} --force --build-artifacts=build.json
