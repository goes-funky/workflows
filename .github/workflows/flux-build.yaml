name: Flux Skaffold Build
"on":
  workflow_call:
    inputs:
      default-repo:
        type: string
        description: Default artifact repository
        default: europe-west3-docker.pkg.dev/y42-artifacts-ea47981a/main
      skaffold-file:
        type: string
        description: Skaffold file to use
        default: skaffold.yaml
      docker-file:
        type: string
        description: Docker file to use
        default: Dockerfile
      skip-checkout:
        type: boolean
        description: Whether to skip checkout
        default: false
      skaffold:
        type: string
        description: Skaffold version
        default: 1.39.2
      is-repo-public:
        type: boolean
        description: Whether to skip ssh agent configuration
        default: false
      push-to-aws-ecr:
        type: boolean
        description: Whether to push to our ECR registry in the AWS Artifacts account
        default: false
      with-submodules:
        type: boolean
        description: Whether to fetch git submodules
        default: false
    secrets:
      gcp-service-account:
        description: GCP Service Account e-mail, has permission to artifact repo
        required: true
      ssh-private-key:
        description: SSH private key used to authenticate to GitHub with, in order to fetch private dependencies
        required: false
      aws-ecr-region:
        description: AWS region the ECR is located in
        required: false
      aws-ecr-registry:
        description: AWS ECR registry
        required: false
      gcp-workload-identity-provider:
        description: GCP Workload Identity provider
        required: true
      aws-ecr-role:
        description: AWS role to assume to be able to push to the ECR
        required: false
jobs:
  build:
    runs-on: ubuntu-latest
    name: Build Docker images
    timeout-minutes: 20
    steps:
      - name: Checkout
        if: '!inputs.skip-checkout'
        uses: actions/checkout@v4
        with:
          path: ./code
      - name: Setup buildkit
        id: setup-buildkit
        uses: docker/setup-buildx-action@v3
      - name: Expose Github Action runtime
        uses: actions/github-script@v7
        with:
          script: |-
            try {
                Object.keys(process.env).forEach(function (key) {
                    if (key.startsWith('ACTIONS_')) {
                        core.info(`${key}=${process.env[key]}`);
                        core.exportVariable(key, process.env[key]);
                    }
                });
            } catch (error) {
                core.setFailed(error.message);
            }
      - name: Download custom skaffold docker build script
        run: curl -LsO https://gist.githubusercontent.com/Caislear/c6af5ddd9400cc99439c6d17d49d889c/raw/f55a24757a0427193933d706d210c9d9dea84eb8/docker-buildx && chmod +x docker-buildx
      - name: Configure skaffold to build with buildkit
        run: 'cp ./code/${{ inputs.skaffold-file }} . && yq -i ''del(.build.local) | del(.build.artifacts.[].docker) | del(.build.artifacts.[].sync.*) | .build.artifacts.[] *= {"custom": {"buildCommand": "../docker-buildx", "dependencies": {"dockerfile": {"path": "${{ inputs.docker-file }}"}}}}'' ${{ inputs.skaffold-file }}'
      - name: Setup SSH Agent
        if: '!inputs.is-repo-public'
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.ssh-private-key }}
      - name: Authenticate to Google Cloud
        id: auth_gcp
        uses: google-github-actions/auth@v2
        with:
          service_account: ${{ secrets.gcp-service-account }}
          workload_identity_provider: ${{ secrets.gcp-workload-identity-provider }}
          token_format: access_token
      - name: Authenticate to Google Artifact Registry
        id: auth_docker_pkg_dev
        uses: docker/login-action@v3
        with:
          registry: europe-west3-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth_gcp.outputs.access_token }}
      - if: inputs.push-to-aws-ecr
        name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.aws-ecr-region }}
          role-to-assume: ${{ secrets.aws-ecr-role }}
          role-session-name: integrations-push-image-session
      - if: inputs.push-to-aws-ecr
        name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: Setup Flux build tools
        uses: yokawasa/action-setup-kube-tools@v0.11.1
        with:
          setup-tools: skaffold
          skaffold: ${{ inputs.skaffold }}
      - name: Configure Skaffold
        run: skaffold config set default-repo "${{ inputs.default-repo }}"
      - name: Export git build details
        run: |-
          CONTAINER_NAME=$(cd ./code && basename -s .git "$(git remote get-url origin)") && echo "CONTAINER_NAME=$CONTAINER_NAME" >> "$GITHUB_ENV"
          SHORT_SHA="$(git -C ./code rev-parse --short HEAD)" && echo "SHORT_SHA=$SHORT_SHA" >> "$GITHUB_ENV"
          COMMIT_SHA="$(git -C ./code rev-parse HEAD)" && echo "COMMIT_SHA=$COMMIT_SHA" >> "$GITHUB_ENV"
      - name: Add branch name to image tag on branch builds
        if: github.event.ref != 'refs/heads/main'
        run: |-
          BRANCH_NAME="${GITHUB_REF##*/}"
          BRANCH_NAME="${BRANCH_NAME//[^a-zA-Z0-9]/-}"
          yq -i ' .build.tagPolicy.customTemplate.template = "{{.SHORT_SHA}}-{{.DATETIME}}-{{.BRANCH}}"' ${{ inputs.skaffold-file }}
          yq -i ' .build.tagPolicy.customTemplate.components += {"name": "BRANCH","envTemplate": {"template": "{{.BRANCH_NAME}}"}}' ${{ inputs.skaffold-file }}
          echo BRANCH_NAME="${BRANCH_NAME}" >> "$GITHUB_ENV"
      - name: Build
        env:
          SKAFFOLD_DEFAULT_REPO: ${{ inputs.default-repo }}
          SKAFFOLD_CACHE_ARTIFACTS: ${{ inputs.push-to-aws-ecr }}
          DOCKER_BUILDKIT_BUILDER: ${{ steps.setup-buildkit.outputs.name }}
          CONTAINER_NAME: ${{ env.CONTAINER_NAME }}
          SHORT_SHA: ${{ env.SHORT_SHA }}
          COMMIT_SHA: ${{ env.COMMIT_SHA }}
          BRANCH_NAME: ${{ env.BRANCH_NAME }}
          PUSH_TO_SECONDARY_REGISTRY: ${{ inputs.push-to-aws-ecr }}
          SECONDARY_REGISTRY: ${{ secrets.aws-ecr-registry }}
        run: cd ./code && skaffold build --filename=../${{ inputs.skaffold-file }}
